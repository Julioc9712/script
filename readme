#!/usr/bin/env bash

# Verifica si la arquitectura es arm64 o amd64
function arch_check() {
  ARCH=$(dpkg --print-architecture)
  if [ "$ARCH" != "amd64" ] && [ "$ARCH" != "arm64" ]; then
    echo -e "\nError: ¡Este script solo funciona en arquitecturas amd64 o arm64!\n"
    exit 1
  fi
}

# Mostrar encabezado
function header_info {
  clear
  cat <<"EOF"
   ____                 _       __     __
  / __ \____  ___  ____| |     / /____/ /_
 / / / / __ \/ _ \/ __ \ | /| / / ___/ __/
/ /_/ / /_/ /  __/ / / / |/ |/ / /  / /_
\____/ .___/\___/_/ /_/|__/|__/_/   \__/
    /_/ W I R E L E S S   F R E E D O M
EOF
}

# Función para obtener la URL correcta de OpenWrt para arm64
function get_openwrt_url() {
  echo "Obteniendo la URL para la imagen de disco de OpenWrt..."

  ARCH=$(dpkg --print-architecture)
  response=$(curl -s https://downloads.openwrt.org/releases/)
  stableversion=$(echo "$response" | grep -oP 'href="\K[0-9]+\.[0-9]+\.[0-9]+(?=/")' | sort -V | tail -1)

  case "$ARCH" in
    amd64)
      TARGET_ARCH="x86/64"
      IMAGE_NAME="openwrt-${stableversion}-x86-64-generic-ext4-combined.img.gz"
      ;;
    arm64)
      TARGET_ARCH="armvirt/64"
      IMAGE_NAME="openwrt-${stableversion}-armvirt-64-generic-ext4-combined.img.gz"
      ;;
    *)
      echo "Error: Arquitectura no soportada: $ARCH"
      exit 1
      ;;
  esac

  URL_BASE="https://downloads.openwrt.org/releases/${stableversion}/targets/${TARGET_ARCH}"
  URL="${URL_BASE}/${IMAGE_NAME}"

  echo "URL de descarga: $URL"
}

# Descargar y preparar la imagen
function download_and_prepare_image() {
  echo "Descargando la imagen..."
  wget -q --show-progress $URL
  FILE=$(basename $URL)
  echo "Descargado: $FILE"

  echo "Descomprimiendo la imagen..."
  gunzip -f $FILE
  FILE="${FILE%.gz}"

  echo "Redimensionando la imagen a 512 MB..."
  qemu-img resize -f raw $FILE 512M
}

# Crear la VM en Proxmox
function create_openwrt_vm() {
  echo "Creando la VM de OpenWrt..."

  VMID=$(pvesh get /cluster/nextid)
  STORAGE="local-lvm"  # Cambia esto si usas otro almacenamiento
  CORES=1
  RAM=256

  qm create $VMID -name openwrt -memory $RAM -cores $CORES -net0 virtio,bridge=vmbr0
  qm importdisk $VMID $FILE $STORAGE
  qm set $VMID -scsihw virtio-scsi-pci -scsi0 ${STORAGE}:vm-${VMID}-disk-0
  qm set $VMID -boot order=scsi0 -serial0 socket -vga serial0 -ostype l26
  qm set $VMID -agent enabled=1 -hotplug disk,network,usb,memory,cpu
  qm start $VMID

  echo "VM de OpenWrt creada con ID: $VMID"
}

# Comprobación de arquitectura, descarga e instalación
arch_check
header_info
get_openwrt_url
download_and_prepare_image
create_openwrt_vm
